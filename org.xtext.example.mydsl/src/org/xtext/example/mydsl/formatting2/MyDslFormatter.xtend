/*
 * generated by Xtext 2.10.0
 */
package org.xtext.example.mydsl.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.common.types.JvmFormalParameter
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.eclipse.xtext.xbase.formatting2.XbaseFormatter
import org.xtext.example.mydsl.services.MyDslGrammarAccess
import org.xtext.example.mydsl.myDsl.Domainmodel
import org.xtext.example.mydsl.myDsl.SuiteDeclaration
import org.xtext.example.mydsl.services.MyDslGrammarAccess.PrepareDeclaraionElements
import org.xtext.example.mydsl.myDsl.Action
import org.xtext.example.mydsl.myDsl.MyDslPackage
import org.xtext.example.mydsl.myDsl.PrepareDeclaraion
import org.xtext.example.mydsl.myDsl.TestDefinition

//@SuppressWarnings("all")
class MyDslFormatter extends XbaseFormatter {

	@Inject extension MyDslGrammarAccess

	def dispatch void format(Domainmodel domainmodel, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		domainmodel.getModuleName.format;

		domainmodel.importSection.format;

		domainmodel.getSuite.format;
	}

//	def dispatch void format(SuiteDeclaration suiteDeclaration, extension IFormattableDocument document) {
//
//		suiteDeclaration.prepend[setNewLines(3)]
//		suiteDeclaration.regionFor.keyword("{").prepend[space = ""] // .append[newLine]
//		suiteDeclaration.prepare.format
//		suiteDeclaration.append[setNewLines(1)]
//	}
//
//	def dispatch void format(PrepareDeclaraion prepare, extension IFormattableDocument document) {
//		set(prepare.previousHiddenRegion, prepare.nextHiddenRegion)[indent]
//		prepare.prepend[setNewLines(2)]
////		prepare.prepend[newLine].prepend[newLine]
//		for (TestDefinition test : prepare.testCases)
//			test.format
//
//	}
//
//	def dispatch void format(Action action, extension IFormattableDocument document) {
//		set(action.previousHiddenRegion, action.nextHiddenRegion)[indent]
//	}
//
//	def dispatch void format(TestDefinition test, extension IFormattableDocument document) {
//		
//		test.prepend[setNewLines(2)]
//		
//		set(test.previousHiddenRegion, test.nextHiddenRegion)[indent]
//
//		for (Action action : test.actions)
//			action.format
//
//	}
}
